<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- mvc组 -->
	<!-- 开启注解驱动 -->
	<context:component-scan base-package="com.emp"></context:component-scan>
	<!-- 扩充了注解驱动，可以将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />
	<!-- 允许访问静态资源 -->
	<mvc:default-servlet-handler />

	<!-- 视图解析器 -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/pages/" /> <property name="suffix" 
		value=".html" /> <property name="contentType" value="text/html;charset=UTF-8"></property> 
		<property name="order" value="0"></property> </bean> -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker.properties" />
	</bean>

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration" />
		<property name="templateLoaderPath">
			<value>/WEB-INF/html/</value>
		</property>
	</bean>

	<bean id="htmlviewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".html" />
		<property name="order" value="0"></property>
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
		<property name="order" value="2"></property>
	</bean>


	<!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截那些路径 路径 就是Controller中的RequestMapping 如/emp/conditionList等 -->
			<mvc:mapping path="/**" />
			<!-- 放行哪些路径 -->
			<mvc:exclude-mapping path="/login" />
			<mvc:exclude-mapping path="/toLogin" />
			<bean class="cn.kgc.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- Shiro配置开始 -->
	<!-- 自定义Realm 核心组件, 定义认证和授权的业务逻辑 -->
	<bean id="myRealm" class="cn.kgc.utils.MyRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5"></property> <!-- 加密算法的名称 -->
				<property name="hashIterations" value="1024"></property> <!-- 配置加密的次数 -->
			</bean>
		</property>
	</bean>

	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="myRealm" />
		<!-- 配置记住我 -->
		<property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>

	<!-- 登出过滤器 -->
	<bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/user/toLogin" />
	</bean>

	<!-- Shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 身份认证失败，则跳转到登录页面的配置 -->
		<property name="loginUrl" value="/user/toLogin" />
		<!-- 权限认证失败，则跳转到指定页面 -->
		<!-- <property name="unauthorizedUrl" value="/user/unauthorized"/> -->
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- authc:权限可请求,不支持记住我 user:权限可请求,支持记住我 -->
		<property name="filterChainDefinitions">
			<value>
				/user/login=anon
				/user/toLogin=anon
				/user/toRegister=anon
				/user/register=anon
				/user/logout=logout
				/**=user
			</value>
		</property>
	</bean>

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 开启Shiro注解 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<!-- 7天,采用spring el表达式来计算，方便修改 -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}" />
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- Shiro配置结束 -->

	<!-- 全局异常处理 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/user/unauthorized</prop>
				<!-- <prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/nons/noAuth.html</prop> 
					<prop key="java.lang.IllegalArgumentException">/redirect:/anons/bizError.html</prop> 
					参数错误(bizError.jsp) <prop key="java.lang.Exception">/redirect:/unknowError.html</prop> -->  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>

</beans>  